The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is a matrix division Function Test in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now test it:
Test1 : matrix of lists with integers/floats

    >>> matrix = [
    ... [1, 2, 5],
    ... [1.4, 2.6, 8],
    ... [6, 7, 4]
    ... ]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 2.5], [0.7, 1.3, 4.0], [3.0, 3.5, 2.0]]

Test2 : check size of lists in matrix

    >>> matrix = [
    ... [1, 2, 5, 9],
    ... [1.4, 2.6, 8],
    ... [6, 7, 4]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Test4 : check divisor is 0 or not integer/float

    >>> matrix = [
    ... [1, 2, 5],
    ... [1.4, 2.6, 8],
    ... [6, 7, 4]
    ... ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
    >>> matrix_divided(matrix, "a")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Test5 : check lists elements are integer/float

    >>> matrix = [
    ... [1, 2, "b"],
    ... [1.4, 2.6, 8],
    ... [6, 7, 4]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test6 : check matrix is list of lists

    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats